application {
  config {
    applicationType monolith
    authenticationType session
    baseName gammaJH
    blueprints []
    buildTool maven
    cacheProvider ehcache
    clientFramework angularX
    clientPackageManager npm
    clientTheme none
    creationTimestamp 1660081398790
    databaseType sql
    devDatabaseType mysql
    dtoSuffix DTO
    enableGradleEnterprise false
    enableHibernateCache false
    enableSwaggerCodegen false
    enableTranslation true
    gradleEnterpriseHost ""
    jhiPrefix jhi
    jhipsterVersion "7.9.2"
    languages [en, es]
    messageBroker false
    microfrontend false
    microfrontends []
    nativeLanguage en
    otherModules []
    packageName com.thegraid.gamma
    prodDatabaseType mysql
    reactive false
    rememberMeKey "2f51cb2b5a56a62718e77f9cac4d420799d6a01a8c4cc2fd50f271a9bdaf7c41c8bb9b10f5b5aa0046ee1f28326be9d4cd36"
    searchEngine false
    serverPort 8080
    serviceDiscoveryType no
    skipUserManagement false
    testFrameworks []
    websocket spring-websocket
    withAdminUi true
  }

  entities Asset, GameClass, GameInst, GameInstProps, GamePlayer, MemberGameProps, Player
}

entity Asset {
  version Long
  name String
  main Boolean
  auto Boolean
  path String
  include String
}
entity GameClass {
  version Long
  name String
  revision String
  launcherPath String
  gamePath String
  docsPath String
  propsNames String
  updated Instant
}
entity GameInst {
  version Long
  gameName String
  passcode String
  created Instant
  started Instant
  finished Instant
  updated Instant
  scoreA Long
  scoreB Long
  ticks Long
  hostUrl String
}
entity GameInstProps {
  version Long
  seed Long
  mapName String
  mapSize Long
  npcCount Long
  jsonProps String
  updated Instant
}
entity GamePlayer {
  version Long
  role String
  ready Boolean
}
entity MemberGameProps {
  version Long
  seed Long
  mapName String
  mapSize Long
  npcCount Long
  jsonProps String
  configName String
}
entity Player {
  version Long
  name String
  rank Integer
  score Integer
  scoreTime Instant
  rankTime Instant
  displayClient String
}
relationship OneToMany {
  GameInstProps{gameInst} to GameInst{props}
  GameClass{gameInst} to GameInst{gameClass}
  Player{ida} to GameInst{playerA}
  Player{idb} to GameInst{playerB}
  GameInst{gameInstProps} to GameInstProps{gameInst1}
  GameInst{gamePlayer} to GamePlayer{gameInst}
  Player{gamePlayer} to GamePlayer{player}
  GameClass{memberGameProps} to MemberGameProps{gameClass}
  GameClass{player} to Player{gameClass}
  Asset{player} to Player{asset}
}
relationship ManyToOne {
  Asset{user} to User
  MemberGameProps{user} to User
}

